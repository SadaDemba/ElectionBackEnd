// <auto-generated />
using ElectionBackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectionBackEnd.Migrations
{
    [DbContext(typeof(ElectionDataContext))]
    [Migration("20221107130149_Migration2")]
    partial class Migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ElectionBackEnd.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasPrecision(2, 7)
                        .HasColumnType("float(2)");

                    b.Property<double>("Longitude")
                        .HasPrecision(3, 7)
                        .HasColumnType("float(3)");

                    b.HasKey("Id");

                    b.HasIndex("Longitude", "Latitude")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ElectionBackEnd.Model.Center", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFull")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nb_Desk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Centers");
                });

            modelBuilder.Entity("ElectionBackEnd.Model.Desk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CenterId")
                        .HasColumnType("int");

                    b.Property<int>("Nb_ElectersAssignable")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.ToTable("Desks");
                });

            modelBuilder.Entity("ElectionBackEnd.Model.Elector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("DeskId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("DeskId");

                    b.ToTable("Electers");
                });

            modelBuilder.Entity("ElectionBackEnd.Model.Desk", b =>
                {
                    b.HasOne("ElectionBackEnd.Model.Center", "Center")
                        .WithMany("Desks")
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");
                });

            modelBuilder.Entity("ElectionBackEnd.Model.Elector", b =>
                {
                    b.HasOne("ElectionBackEnd.Model.Address", "Address")
                        .WithMany("Electers")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectionBackEnd.Model.Desk", "Desk")
                        .WithMany("Electers")
                        .HasForeignKey("DeskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Desk");
                });

            modelBuilder.Entity("ElectionBackEnd.Model.Address", b =>
                {
                    b.Navigation("Electers");
                });

            modelBuilder.Entity("ElectionBackEnd.Model.Center", b =>
                {
                    b.Navigation("Desks");
                });

            modelBuilder.Entity("ElectionBackEnd.Model.Desk", b =>
                {
                    b.Navigation("Electers");
                });
#pragma warning restore 612, 618
        }
    }
}
